{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsConteiner.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","classes","dialogsItems","active","name","Message","messages","message","onClick","deleteMessage","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","m","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator","messageId"],"mappings":"sNAKIA,EAA6B,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKD,SAEpDE,EAAmB,SAACC,GAAc,IACrCC,EADoC,iLAGlC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAG,eAHV,GACVC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCf7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAlLD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,aAAe,iCAAiC,OAAS,2BAA2B,SAAW,6BAA6B,QAAU,8B,oBCA9LD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iHCa/JC,EAVI,SAACN,GAChB,IAAIO,EAAO,WAAaP,EAAMQ,GAE9B,OAAO,yBAAKC,UAAWC,IAAQC,aAAe,IAAMD,IAAQE,QACxD,kBAAC,IAAD,CAASX,GAAIM,GAAOP,EAAMa,Q,kBCOnBC,EAZC,SAACd,GAMjB,OAAO,yBAAKS,UAAWC,IAAQK,UAC1Bf,EAAMgB,QACP,4BAAQC,QANY,WAChBjB,EAAMkB,cAAclB,EAAMQ,MAK9B,O,iCCuBJW,EAAeC,YAAiB,KAc9BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACtB,GACpB,OACI,0BAAMwB,SAAUxB,EAAMyB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUf,KAAM,iBAAkBgB,YAAa,qBACjEC,SAAU,CAACC,IAAUZ,MAE7B,6BAAK,6CAOEa,EA1CC,SAAChC,GAEb,IAAIP,EAAQO,EAAMiC,YAEdC,EAAkBzC,EAAM0C,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMyB,IAAKD,EAAE7B,GAAIA,GAAI6B,EAAE7B,QACrF+B,EAAmB9C,EAAMsB,SAASqB,KAAK,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAC5CxB,QAASwB,EAAExB,QAASsB,IAAKE,EAAEhC,GAAIA,GAAIgC,EAAEhC,GAAIU,cAAelB,EAAMkB,mBAOlE,OACI,yBAAKT,UAAWC,IAAQyB,SACpB,yBAAK1B,UAAWC,IAAQC,cACnBuB,GAEL,yBAAKzB,UAAWC,IAAQK,UACpB,6BAAMwB,IAEV,kBAAClB,EAAD,CAAqBG,SAbT,SAACiB,GACjBzC,EAAM0C,YAAYD,EAAOE,qB,wBCOlBC,sBACXzC,aAlBkB,SAACV,GACnB,MAAM,CACFwC,YAAaxC,EAAMwC,gBAIF,SAACY,GACtB,MAAM,CACFH,YAAa,SAACC,GACVE,EAAUC,YAAmBH,KAEjCzB,cAAe,SAAC6B,GACZF,EAAU3B,YAAc6B,SAOhCnD,IAFWgD,CAGbZ","file":"static/js/4.8d11addc.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\n\nexport const withAuthRedirect = (Component) =>{\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>\n\n            return <Component {...this.props} />\n        }\n    }\n   \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__3-Pix\",\"dialogsItems\":\"DialogItem_dialogsItems__3a0eN\",\"active\":\"DialogItem_active__2qnc5\",\"messages\":\"DialogItem_messages__2H-vw\",\"message\":\"DialogItem_message__nOyYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__2BZUu\",\"dialogsItems\":\"Message_dialogsItems__3BxQb\",\"active\":\"Message_active__3KMb1\",\"messages\":\"Message_messages__11r0A\",\"message\":\"Message_message__1MOXo\"};","    import React from 'react';\n    import classes from './DialogItem.module.css';\n    import {NavLink} from 'react-router-dom';\n\n    const DialogItem = (props) => {\n        let path = \"/dialogs\" + props.id;\n\n        return <div className={classes.dialogsItems + ' ' + classes.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    }\n\n    \n\n    export default DialogItem;","    import React from 'react';\n    import classes from './Message.module.css';\n\n    const Message = (props) => {\n\n        let deleteMessage = () =>{\n            props.deleteMessage(props.id)\n        }\n\n    return <div className={classes.messages}>\n        {props.message}\n        <button onClick={deleteMessage} >x</button>\n    </div>\n    }\n\n    export default Message;","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />);\n    let messagesElements = state.messages.map( m => <Message \n        message={m.message} key={m.id} id={m.id} deleteMessage={props.deleteMessage} />);\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n\n    }\n\n    return(\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems} >\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                <div>{messagesElements}</div>\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n    </div>\n)\n}\n\nlet maxLength100 = maxLengthCreator(100);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name={\"newMessageBody\"} placeholder={\"Enter your message\"}\n                validate={[required, maxLength100]}/>\n            </div>\n        <div><button>Send</button></div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm)\n\nexport default Dialogs;","import React from 'react';\nimport { sendMessageCreator, deleteMessage } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux'\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux'\n\nlet mapStateToProps = (state) => {\n    return{\n        dialogsPage: state.dialogsPage,\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        sendMessage: (newMessageBody) => {\n            dispatch( sendMessageCreator(newMessageBody) )\n        },\n        deleteMessage: (messageId) => {\n            dispatch( deleteMessage(messageId) )\n        } ,\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)"],"sourceRoot":""}